@model Talento.Models.ApplicationSettingCreateModel
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

@using (Html.BeginForm("Create", "Settings", FormMethod.Post, new { id = "formnewparameter", @class = "col-md-8" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <h2>New Parameter</h2>
        <hr />

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div id="parameter-name" class="form-group">
                @Html.LabelFor(model => model.SettingName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SettingName, new { htmlAttributes = new { @class = "form-control typeahead add-setting-name", placeholder = "Add new setting", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.SettingName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParameterName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ParameterName, new { htmlAttributes = new { @class = "form-control", placeholder = "Add new parameter", } })
                    @Html.ValidationMessageFor(model => model.ParameterName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParameterValue, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ParameterValue, new { htmlAttributes = new { @class = "form-control", placeholder = "Add new value", } })
                    @Html.ValidationMessageFor(model => model.ParameterValue, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="pmd-modal-action pmd-modal-bordered text-right">
                <button id="appSettingCancel" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" onclick="window.location.href='/Dashboard/AppSettings'">Cancel</button>
                <input id="submit-add-setting" type="submit" class="btn pmd-btn-flat pmd-ripple-effect btn-default" value="Confirm" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    window.onload = function () {
        (function ($) {
            // On form submit Add-Parameter
            var $form = $("#formnewparameter");
            $form.on("submit", function (event) {
                event.preventDefault();
                var $self = $(this);
                if ($form.valid()) {
                    $.post({
                        url: $self.attr("action"),
                        data: $self.serialize()
                    }).done(function (response) {
                        alertify.set('notifier', 'position', 'bottom-left');
                        alertify.success('<b>Parameter is Added</b>');
                        setTimeout(function () {
                            window.location = "/Dashboard/AppSettings";
                        }, 3000);
                    }).fail(function (error) {
                        alertify.set('notifier', 'position', 'bottom-left');
                        alertify.error("Error: <b>" + $("#SettingName").val() + "</b> already has parameter: " + "<b>" + $("#ParameterName").val() + "<b/>");
                        setTimeout(function () {
                            window.location = "/Dashboard/AppSettings";
                        }, 3000);
                    });
                }
            });
        }(jQuery));
    }
</script>