@model Talento.Models.CandidateModel
@{
    ViewBag.Title = "AppSettings";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<style>
    .container {
        display: contents;
    }
    .constructor, .pmd-content {
    }
    .ss-small{

    }
    .aux {
        padding-left: 10%;
        padding-right: 10%;
        width: 1290px;
    }
</style>

<!-- Page Content -->
<div class="container">
    @if (User.Identity.Name == "")
            {
        <button style="float:right;" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" onclick="goBack()">Go Back</button>
        <script>
            function goBack() {
                window.history.back();
            }
        </script>
    }
    <div id="ss-container" class="ss-container aux" style="">
        <div class="ss-row">
            <div class="ss-left">
                <h2 id="november" style="color:black;">Software Team</h2>
            </div>
            <div class="ss-right"style="left:20px;">
                <h2 style="color:black;">Timeline</h2>
            </div>
        </div>
        
        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Thursday 1st June: The team is back into coding. Ready to add enchacements before the demo.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>
        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span>Monday 29th May: The testing enviroment is now online and working!</span>
                </h3>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Tuesday 23rd May: Arturo begins negotations with IS in order to prepare for the implementation before the demo.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>
	
        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span>Friday 19th May: Features development has finished. The MVP was assessed by Arturo and the team is ready for the real demo!</span>
                </h3>
            </div>
        </div>
	
        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Monday 15th May: Comments and Profile Images are added to the system. About us page was also added.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>
        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span>Monday 8th May: Minor bug fixes, TIFF template availability and the team had its ASP.NET MVC Apps Assessment!</span>
                </h3>
            </div>
        </div>
        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Tuesday 2nd May: Now it is possible to record Techincal Interviews Feedback and Conditional Offers.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span>Monday 24th April: Mayor enhacement! Now we have application settings, and some bugs and enhacements were implemented.</span>
                </h3>
            </div>
        </div>
        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Monday 17th April: File Management and protection is implemented. Another successful demo, go team!</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span>Monday 10th April: Every bug was fixed and the profiles and positions logic is fully implemented. The demo was flagrantly more successful than the one of the previous week.</span>
                </h3>
            </div>
        </div>
        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Monday 3rd April: Only one use story is completed. The iteration was a completely disaster.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span>Monday 20th, March: User management is implemented. Monday 27th, March: Dashboard and Position management is implemented.</span>
                </h3>
            </div>
        </div>
        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span>Wednesday 15th, March: The entire team moves from Downtown Montevideo facility to Monte Caseros.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="ss-left">
                <a href="http://tympanus.net/Tutorials/TypographyEffects/" class="ss-circle ss-circle-1" style="width:50px;height:50px;">Typography Effects with CSS3 and jQuery</a>
            </div>
            <div class="ss-right" style="margin-left:30px;">
                <h3 style="margin-top:0px;">
                    <span> Tuesday 14th, March: Arturo was introduced to the team as Product Owner since he was the autor of the idea. He also involved himself as a Technical Leader which was of great help.</span>
                </h3>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="ss-left">
                <h3 style="margin-top:0px;">
                    <span> Monday 13th, March: The team actually began reading and understanding the EPIC. DotNet and SCRUM methodology training had just finished, it was time to put it into practice.</span>
                </h3>
            </div>
            <div class="ss-right" style="margin-left:40px;">
                <a href="http://tympanus.net/Development/HoverClickTriggerCircle/" style="width:50px;height:50px;" class="ss-circle ss-circle-2">Hover and Click Trigger for Circular Elements with jQuery</a>
            </div>
        </div>

        <div class="ss-row ss-small">
            <div class="" style="text-align:center;">
                <h3 style="margin-top:75px;">
                    <span>Friday 10th, March: Idea of Talento was introduced. Was still called OpenPositionsTool. The team were given the EPIC explaining the problem to be solved.</span>
                </h3>
            </div>
        </div>
        @if (User.Identity.Name == "")
            {
            <button style="float:right;" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" onclick="goBack()">Go Back</button>
                <script>
                    function goBack() {
                        window.history.back();
                    }
                </script>
        }
    </div>
</div>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script type="text/javascript" src="js/jquery.easing.1.3.js"></script>
<script type="text/javascript">
    $(function () {

        var $sidescroll = (function () {

            // the row elements
            var $rows = $('#ss-container > div.ss-row'),
                // we will cache the inviewport rows and the outside viewport rows
                $rowsViewport, $rowsOutViewport,
                // navigation menu links
                $links = $('#ss-links > a'),
                // the window element
                $win = $(window),
                // we will store the window sizes here
                winSize = {},
                // used in the scroll setTimeout function
                anim = false,
                // page scroll speed
                scollPageSpeed = 2000,
                // page scroll easing
                scollPageEasing = 'easeInOutExpo',
                // perspective?
                hasPerspective = false,

                perspective = hasPerspective && Modernizr.csstransforms3d,
                // initialize function
                init = function () {

                    // get window sizes
                    getWinSize();
                    // initialize events
                    initEvents();
                    // define the inviewport selector
                    defineViewport();
                    // gets the elements that match the previous selector
                    setViewportRows();
                    // if perspective add css
                    if (perspective) {
                        $rows.css({
                            '-webkit-perspective': 600,
                            '-webkit-perspective-origin': '50% 0%'
                        });
                    }
                    // show the pointers for the inviewport rows
                    $rowsViewport.find('a.ss-circle').addClass('ss-circle-deco');
                    // set positions for each row
                    placeRows();

                },
                // defines a selector that gathers the row elems that are initially visible.
                // the element is visible if its top is less than the window's height.
                // these elements will not be affected when scrolling the page.
                defineViewport = function () {

                    $.extend($.expr[':'], {

                        inviewport: function (el) {
                            if ($(el).offset().top < winSize.height) {
                                return true;
                            }
                            return false;
                        }

                    });

                },
                // checks which rows are initially visible
                setViewportRows = function () {

                    $rowsViewport = $rows.filter(':inviewport');
                    $rowsOutViewport = $rows.not($rowsViewport)

                },
                // get window sizes
                getWinSize = function () {

                    winSize.width = $win.width();
                    winSize.height = $win.height();

                },
                // initialize some events
                initEvents = function () {

                    // navigation menu links.
                    // scroll to the respective section.
                    $links.on('click.Scrolling', function (event) {

                        // scroll to the element that has id = menu's href
                        $('html, body').stop().animate({
                            scrollTop: $($(this).attr('href')).offset().top
                        }, scollPageSpeed, scollPageEasing);

                        return false;

                    });

                    $(window).on({
                        // on window resize we need to redefine which rows are initially visible (this ones we will not animate).
                        'resize.Scrolling': function (event) {

                            // get the window sizes again
                            getWinSize();
                            // redefine which rows are initially visible (:inviewport)
                            setViewportRows();
                            // remove pointers for every row
                            $rows.find('a.ss-circle').removeClass('ss-circle-deco');
                            // show inviewport rows and respective pointers
                            $rowsViewport.each(function () {

                                $(this).find('div.ss-left')
                                    .css({
                                        left: '0%'
                                    })
                                    .end()
                                    .find('div.ss-right')
                                    .css({
                                        right: '0%'
                                    })
                                    .end()
                                    .find('a.ss-circle')
                                    .addClass('ss-circle-deco');

                            });

                        },
                        // when scrolling the page change the position of each row
                        'scroll.Scrolling': function (event) {

                            // set a timeout to avoid that the
                            // placeRows function gets called on every scroll trigger
                            if (anim) return false;
                            anim = true;
                            setTimeout(function () {

                                placeRows();
                                anim = false;

                            }, 10);

                        }
                    });

                },
                // sets the position of the rows (left and right row elements).
                // Both of these elements will start with -50% for the left/right (not visible)
                // and this value should be 0% (final position) when the element is on the
                // center of the window.
                placeRows = function () {

                    // how much we scrolled so far
                    var winscroll = $win.scrollTop(),
                        // the y value for the center of the screen
                        winCenter = winSize.height / 2 + winscroll;

                    // for every row that is not inviewport
                    $rowsOutViewport.each(function (i) {

                        var $row = $(this),
                            // the left side element
                            $rowL = $row.find('div.ss-left'),
                            // the right side element
                            $rowR = $row.find('div.ss-right'),
                            // top value
                            rowT = $row.offset().top;

                        // hide the row if it is under the viewport
                        if (rowT > winSize.height + winscroll) {

                            if (perspective) {

                                $rowL.css({
                                    '-webkit-transform': 'translate3d(-75%, 0, 0) rotateY(-90deg) translate3d(-75%, 0, 0)',
                                    'opacity': 0
                                });
                                $rowR.css({
                                    '-webkit-transform': 'translate3d(75%, 0, 0) rotateY(90deg) translate3d(75%, 0, 0)',
                                    'opacity': 0
                                });

                            } else {

                                $rowL.css({
                                    left: '-50%'
                                });
                                $rowR.css({
                                    right: '-50%'
                                });

                            }

                        }
                        // if not, the row should become visible (0% of left/right) as it gets closer to the center of the screen.
                        else {

                            // row's height
                            var rowH = $row.height(),
                                // the value on each scrolling step will be proporcional to the distance from the center of the screen to its height
                                factor = (((rowT + rowH / 2) - winCenter) / (winSize.height / 2 + rowH / 2)),
                                // value for the left / right of each side of the row.
                                // 0% is the limit
                                val = Math.max(factor * 50, 0);

                            if (val <= 0) {

                                // when 0% is reached show the pointer for that row
                                if (!$row.data('pointer')) {

                                    $row.data('pointer', true);
                                    $row.find('.ss-circle').addClass('ss-circle-deco');

                                }

                            } else {

                                // the pointer should not be shown
                                if ($row.data('pointer')) {

                                    $row.data('pointer', false);
                                    $row.find('.ss-circle').removeClass('ss-circle-deco');

                                }

                            }

                            // set calculated values
                            if (perspective) {

                                var t = Math.max(factor * 75, 0),
                                    r = Math.max(factor * 90, 0),
                                    o = Math.min(Math.abs(factor - 1), 1);

                                $rowL.css({
                                    '-webkit-transform': 'translate3d(-' + t + '%, 0, 0) rotateY(-' + r + 'deg) translate3d(-' + t + '%, 0, 0)',
                                    'opacity': o
                                });
                                $rowR.css({
                                    '-webkit-transform': 'translate3d(' + t + '%, 0, 0) rotateY(' + r + 'deg) translate3d(' + t + '%, 0, 0)',
                                    'opacity': o
                                });

                            } else {
                                $rowL.css({
                                    left: -val + '%'
                                });
                                $rowR.css({
                                    right: -val + '%'
                                });
                            }
                        }
                    });
                };
            return {
                init: init
            };

        })();

        $sidescroll.init();

        $("#hamburguerbutton").click(function () {
            $("#ss-container").toggleClass("aux");
        });

    });
</script>



