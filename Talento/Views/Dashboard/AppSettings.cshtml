@model Talento.Models.CreateApplicationSettingsViewModel
@{
    ViewBag.Title = "AppSettings";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<div class="pmd-content pmd-content-custom dropdown-component" id="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1>Application Settings</h1>
            </div>
            <div class="clearfix"></div>
            <hr />
        </div>
        <div tabindex="-1" class="modal fade" id="complete-dialog" style="display: none;" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    @Html.Action("AddSettingsForm", "Dashboard")
                </div>
            </div>
        </div>

        <!-- List of Settings -->
        <div id="applicationSettingContainer">
            @Html.Action("List", "Settings")
        </div>
        <script type="text/javascript">
            window.onload = function () {
                (function ($) {
                    var $appContainer = $("#applicationSettingContainer");

                    // Click Pagination
                    $appContainer.on("click", ".pagination a", function (e) {
                        e.preventDefault();
                        var $self = $(this);

                        var href = $self.attr("href");
                        if (!$self.parent("li").hasClass("active")) {
                            $.ajax({
                                url: href
                            }).done(function (response) {
                                $appContainer.html(response);
                                ScrollTo($appContainer);
                            }).fail(function (error) {
                                console.log("Error");
                            });
                        }
                    });
                    // Click Sort
                    $appContainer.on("click", "#pagination-sort a", function (e) {
                        e.preventDefault();
                        var $self = $(this);

                        var href = $self.attr("href");
                        $.ajax({
                            url: href
                        }).done(function (response) {
                            $appContainer.html(response);
                            ScrollTo($appContainer);
                        }).fail(function (error) {
                            console.log("Error");
                        });
                    });

                    // Click Filter
                    $appContainer.on("click", "#filter-input-button", function (e) {
                        e.preventDefault();
                        console.log("asdasd");
                        var $self = $(this);
                        var $value = $("#filter-input").val();
                        var href = $self.attr("data-url");
                        console.log($("#filter-input").val());
                        $.ajax({
                            url: href,
                            data: { filter: $("#filter-input").val() }
                        }).done(function (response) {
                            $appContainer.html(response);
                            ScrollTo($appContainer);
                        }).fail(function (error) {
                            console.log("Error");
                        });
                    });

                    function ScrollTo(element, duration) {
                        duration = typeof duration !== 'undefined' ? a : 1000;
                        $('html, body').animate({
                            scrollTop: element.offset().top - 80
                        }, duration);
                    }

                    // Fred functions
                    console.log("llegue");

                    $("#SettingNameButton").on("click", function () {
                        var $this = $("#SettingName");
                        console.log($this.val());
                        $.ajax(
                            {
                                url: "/Settings/Modal",
                                dataType: "json",
                                data: { prefix: $this.val() },
                                success: function (response) {
                                    console.log(response);
                                }
                            });
                    });

                    var $form = $("#formnewparameter");
                    // On Form Cancel Reset Form
                    $(document).on("click", "#appSettingCancel", function (event) {
                         $form[0].reset();
                    })
                    // On Form Submit
                    $form.on("submit", function (event) {
                        event.preventDefault();
                        console.log("Submit");
                        var $self = $(this);
                        $.post({
                            url: $self.attr("action"),
                            data: $self.serialize()
                        }).done(function (response) {
                            //alert("Success");
                            $('#complete-dialog').modal('hide');
                            $('body').removeClass('modal-open');
                            $('.modal-backdrop').remove();
                            $form[0].reset();

                            $("#results").append("Parameter is added");

                        }).fail(function (error) {
                            //alert("Error");
                            $("#error-result").append("Error adding new parameter");
                        });
                    });
                })(jQuery);
            }
        </script>
    </div>
</div>

