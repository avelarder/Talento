@model Talento.Models.CreatePositionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Positions", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal">
        <h4>Position</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title,"", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.EngagementManager, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EngagementManager, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EngagementManager, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.EmailPM, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EmailPM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailPM,"", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.RGS, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.RGS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RGS, "", new { @class = "text-danger" })
        </div>

        
        <div class="form-group col-md-8">
            <div style="float:right">
                <input type="submit" value="Update" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" />
                @Html.ActionLink("Back to List", "Index", "Dashboard", null, new { @class = "btn pmd-btn-flat pmd-ripple-effect btn-primary" })
            </div>
        </div>
    </div>
}