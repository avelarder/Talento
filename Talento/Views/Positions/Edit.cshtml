@model Talento.Models.EditPositionViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<span style="font-size:18px;">Editing @Model.Title</span>

<form action="/Positions/Edit" method="post" novalidate="novalidate" id="editform">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Created on @Model.CreationDate.ToLongDateString()</h4>
        <hr />
        @Html.HiddenFor(model => model.PositionId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.EngagementManager, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EngagementManager, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EngagementManager, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield pmd-textfield-floating-label">
            @Html.LabelFor(model => model.RGS, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.RGS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RGS, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-8 pmd-textfield">
            <label class="control-label col-md-2" style="margin-left:-50px;" for="Status">Status</label>
            @Html.DropDownListFor(model => model.Status, EnumHelper.GetSelectList(typeof(Talento.Entities.PositionStatus)).Where(e => e.Text != "Removed"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>


        <div class="form-group col-md-8">
            <div style="float:right">
                <input type="button" id="editbutton" value="Update" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" />
                @Html.ActionLink("Back to Details of "+Model.Title, "Details", "Positions", new { id = Model.PositionId }, new { @class = "btn pmd-btn-flat pmd-ripple-effect btn-primary" })
            </div>
            <br />
            @Html.ActionLink("Back to Dashboard", "Index", "Dashboard", null, null)
        </div>
    </div>
</form>
    <br />

    <script>
        window.onload = function () {
            (function ($) {
                $(document).ready(function () {
                    $("#editbutton").click(function (evt) {
                        alertify.set('notifier', 'position', 'bottom-left');
                        if ($("#editform").valid()) {
                            setTimeout(function () {
                                alertify.success('<b>The Position has been Updated</b>');
                            }, 2500);
                            setTimeout(function () { $("#editform").submit(); }, 5000);
                        } else {
                            return;
                        }
                    });
                });
            }(jQuery));
        }
    </script>
