@using PagedList.Mvc; @*import this so we get our HTML Helper*@
@using PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

@model Talento.Models.PositionModel
@{
    ViewBag.Title = "Position details";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="row">
    <div class="col-md-12">
        <h2>@Html.DisplayFor(x => x.Title)</h2>
        <div>
            <div class="col-md-7">
                <b>Creation date:</b> @Html.DisplayFor(x => x.CreationDate)
            </div>
        </div>
        <div class="bottom">&nbsp;</div>
        <div class="col-md-11">
            <p><b>Description: </b>@Html.DisplayFor(x => x.Description)</p>
            <p><b>Area: </b>@Html.DisplayFor(x => x.Area)<p />
            <p><b>Owner: </b>@Html.DisplayFor(x => x.Owner.UserName)<p />
            <p><b>Engagement Manager: </b>@Html.DisplayFor(x => x.EngagementManager)<p />
            <p><b>Portfolio Manager: </b>@Html.DisplayFor(x => x.PortfolioManager.UserName)<p />
            <p><b>RGS: </b>@Html.DisplayFor(x => x.RGS)<p />
            <p><b>Status: </b>@Html.DisplayFor(x => x.Status)<p />
        </div>
        <div class="col-md-8">
            @*<input type="button" name="back" class="btn pmd-ripple-effect btn-primary" value="Back" onclick="@("window.location.href='" + @Url.Action("Index", "Dashboard") + "'");" />*@
            <a href="@Url.Action("Index", "Dashboard")" alt="Back">
                <i class="material-icons md-24">keyboard_arrow_left</i>
            </a>

            @*<input type="button" name="edit" value="Edit" onclick="@("window.location.href='" + @Url.Action("Edit", "Positions", new { id = Model.PositionId }) + "'");" />*@
            <a href="@Url.Action("Edit", "Positions", new { id = Model.PositionId })" alt="Edit position">
                <i class="material-icons md-24">mode_edit</i>
            </a>

            @*<input data-target="#complete-dialog" data-toggle="modal" class="btn btn-danger pmd-ripple-effect btn-primary pmd-z-depth" value="Delete" />*@
            <a href="#" class="delete-position" data-target="#delete-position-dialog" data-position="@Model.PositionId" alt="Delete Position">
                <i class="material-icons md-24">delete</i>
            </a>

            <!--Delete position modal-->
            <div tabindex="-1" class="modal fade" id="delete-position-dialog" style="display: none;" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <p>Are you sure you want to remove this position?</p>
                        </div>
                        <div class="pmd-modal-action pmd-modal-bordered text-right">
                            <button data-dismiss="modal" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" type="button">Cancel</button>
                            <button id="delete-position-button" data-position="@Model.PositionId" data-url="@Url.Action("Delete", "Positions", new { id = Model.PositionId })" data-dismiss="modal" type="button" class="btn pmd-btn-flat pmd-ripple-effect btn-default">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--Delete position modal-->
        </div>
    </div>

    <div id="position-log-container">
        @* Partial of Logs *@
        <a href="#" class="container-close pmd-tooltip" data-toggle="tooltip" data-placement="left" title="Pagination Log">
            <i class="material-icons">format_list_bulleted</i>
        </a>
        @Html.Action("List", "Positions", new { id = Model.PositionId })
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <br/>
        @Html.Partial("TIFFDownload")
        <span style="font-size:20px;">Candidates</span>
        <!--pagination-->
        <table class="table" id="candidates-list">
            <thead>
                <tr>
                    <th>Email</th>
                    <th>Created On</th>
                    <th>Created By</th>
                    <th>Status</th>
                    <th rowspan="2">Options</th>
                    @if (ViewBag.userRole != "Admin")
                    {
                        <th>
                        </th>
                        <th>
                            @if (Model.Status == Talento.Entities.PositionStatus.Open)
                            {
                              <a style="margin-left: -35px;" class="btn btn-sm pmd-btn-fab pmd-btn-raised pmd-ripple-effect btn-primary"
                                 href="/Candidate/Create/@Model.PositionId" alt="Add profile" id="buttonaddprofile" >
                                    <i class="material-icons md-24">add</i>
                                </a>
                            }
                        </th>
                    }
                </tr>
            </thead>
            @foreach (var cP in ViewBag.onePageOfCandidatePositions)
            {
                string email = cP.Candidate.Email.ToString();
                <tr class="candidate-row" data-candidate-id="@cP.CandidateID"> 
                    <td>
                        @Html.ActionLink(email, "Details", "Candidate", new { id = cP.Candidate.CandidateId, positionId = cP.Position.PositionId},null)
                    </td>
                    <td>
                        @cP.Candidate.CreatedOn.ToString("dd/MM/yyyy")
                    </td>
                    <td>
                        @cP.Candidate.CreatedBy.Email
                    </td>
                    <td>
                        @Html.Action("Status", "Candidate", new { positionModel = Model, candidateId = cP.CandidateID })
                    </td>
                    @if (Model.Status == Talento.Entities.PositionStatus.Open)
                    {
                        <td>
                            <a href="@Url.Action("NewTechnicalInterview", "TechnicalInterview", new { candidateEmail = cP.Candidate.Email, positionId = cP.Position.PositionId, candidateId = cP.Candidate.CandidateId })">
                                Track Interview
                            </a>
                        </td>
                    }
                    <td>
                        <a href="@Url.Action("Edit", "Candidate",new { id = cP.CandidateID, positionId = Model.PositionId } )" class="material-icons md-24 edit-candidate" alt="Edit candidate">
                            mode_edit
                        </a>
                    </td>                 
                    <td>
                        <a href="#" class="delete-candidate" data-target="#delete-candidate-dialog" data-candidate="@cP.CandidateID" alt="Delete candidate">
                            <i class="material-icons md-24">delete</i>
                        </a>
                    </td>
                  
                </tr>
            }
        </table>
        <script>
            var candidateid = 0;
            window.onload = function () {
                (function ($) {
                    // Delte Candidate
                    var $deleteC = $(".delete-candidate");
                    var $buttonDeleteC = $("#delete-candidate-button");
                    var urlC = $buttonDeleteC.attr("data-url");
                    var dataCandidate = "";
                    var positionId = "@Model.PositionId";
                    $buttonDeleteC.on("click", function (event) {
                        event.preventDefault();
                        $.ajax({
                            url: urlC,
                            data: { idPosition: positionId, idCandidate: dataCandidate }
                        }).done(function (response) {
                            location.reload();
                        }).fail(function () {
                            location.reload();
                        });
                    });
                    $deleteC.on("click", function (event) {
                        event.preventDefault();
                        var $self = $(this);
                        var $modalTarget = $("#delete-candidate-dialog");
                        dataCandidate = $self.attr("data-candidate");
                        $modalTarget.modal('show');
                    });

                    var $delete = $(".delete-position");
                    var $buttonDelete = $("#delete-position-button");
                    var url = $buttonDelete.attr("data-url");
                    var dataCandidate = "";
                    var positionId = "@Model.PositionId";
                    $buttonDelete.on("click", function (event) {
                        event.preventDefault();
                        $.ajax({
                            url: url,
                            data: { idPosition: positionId}
                        }).done(function (response) {
                            location.reload();
                        }).fail(function () {
                            location.reload();
                        });
                    });
                    $delete.on("click", function (event) {
                        event.preventDefault();
                        var $self = $(this);
                        var $modalTarget = $("#delete-position-dialog");
                        dataCandidate = $self.attr("data-candidate");
                        $modalTarget.modal('show');
                    });


                }(jQuery));
                // Clear Form from Validations -.-
                function clearFormValidation(form) {
                    form.find("[data-valmsg-summary=true]")
                        .removeClass("validation-summary-errors")
                        .addClass("validation-summary-valid")
                        .find("ul").empty();
                    form.find("[data-valmsg-replace]")
                        .removeClass("field-validation-error")
                        .addClass("field-validation-valid")
                        .empty();
                }

                // Candidate Status Update
                var $selectCandidateStatus = $(".select-candidate-status");
                var $updateCandidateStatus = $(".update-status-candidate");

                $updateCandidateStatus.on("click", function (e) {
                    e.preventDefault();
                    var $self = $(this);

                    var $status = $self.parent(".form-group").find(".select-candidate-status");
                    var candidateId = $self.closest(".candidate-row").attr("data-candidate-id");

                    console.log($status);
                    console.log($status.val());

                    if ($status.val() !== null) {
                        $.post({
                            url: "/Candidate/ChangeStatus",
                            data: { positionCandidateId: candidateId, status: $status.val() }
                        }).done(function (response) {
                            location.reload();
                        }).fail(function (error) {
                            alertify.set('notifier', 'position', 'bottom-left');
                            alertify.error("<strong style='color:#FFF;'>Invalid Action<i style='margin-top:0px; margin-right:0px; position:relative; float:right;' class='material-icons'>warning</i></strong>");
                        });
                    }

                });
            }

        </script>
        <!--pagination-->
        <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
        @Html.PagedListPager((IPagedList)ViewBag.onePageOfCandidatePositions, page => Url.Action("Details", "Positions", new { Model.PositionId, page }))
        <!--Delete profile modal-->
        <div tabindex="-1" class="modal fade" id="delete-candidate-dialog" style="display: none;" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-body">
                        <p>Are you sure you want to remove this candidate from the position?</p>
                    </div>
                    <div class="pmd-modal-action pmd-modal-bordered text-right"> 
                        <button data-dismiss="modal" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" type="button">Cancel</button>
                        <button id="delete-candidate-button" data-candidate="" data-position="@Model.PositionId" data-url="@Url.Action("DeleteCandidate", "Positions")" data-dismiss="modal" type="button" class="btn pmd-btn-flat pmd-ripple-effect btn-default">Delete</button>
                    </div>
                </div>
            </div>
        </div>
        <!--Delete profile modal-->
    </div>
</div>