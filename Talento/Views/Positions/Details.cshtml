@using PagedList.Mvc; @*import this so we get our HTML Helper*@
@using PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

@model Talento.Models.PositionModel
@{
    ViewBag.Title = "Position details";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="row">
    <div class="col-md-12">
        <h2>Positions</h2>
        <div>
            <div class="col-md-7">
                <b>Title:</b> @Html.DisplayFor(x => x.Title)
            </div>
            <div class="col-md-5">
                <b>Creation date:</b> @Html.DisplayFor(x => x.CreationDate)
            </div>
        </div>
        <div class="bottom">&nbsp;</div>
        <br />
        <div class="col-md-11">
            <p><b>Description: </b>@Html.DisplayFor(x => x.Description)</p>
            <p><b>Area: </b>@Html.DisplayFor(x => x.Area)<p />
            <p><b>Owner: </b>@Html.DisplayFor(x => x.Owner.UserName)<p />
            <p><b>Engagement Manager: </b>@Html.DisplayFor(x => x.EngagementManager)<p />
            <p><b>Portfolio Manager: </b>@Html.DisplayFor(x => x.PortfolioManager.UserName)<p />
            <p><b>RGS: </b>@Html.DisplayFor(x => x.RGS)<p />
            <p><b>Status: </b>@Html.DisplayFor(x => x.Status)<p />
        </div>
        <div class="col-md-8">
            @*<input type="button" name="back" class="btn pmd-ripple-effect btn-primary" value="Back" onclick="@("window.location.href='" + @Url.Action("Index", "Dashboard") + "'");" />*@
            <a href="@Url.Action("Index", "Dashboard")" alt="Back">
                <i class="material-icons md-24">keyboard_arrow_left</i>
            </a>

            @*<input type="button" name="edit" value="Edit" onclick="@("window.location.href='" + @Url.Action("Edit", "Positions", new { id = Model.PositionId }) + "'");" />*@
            <a href="@Url.Action("Edit", "Positions", new { id = Model.PositionId })" alt="Edit position">
                <i class="material-icons md-24">mode_edit</i>
            </a>

            @*<input data-target="#complete-dialog" data-toggle="modal" class="btn btn-danger pmd-ripple-effect btn-primary pmd-z-depth" value="Delete" />*@
            <a href="@Url.Action("Delete", "Positions")" data-target="#complete-dialog" alt="Delete position">
                <i class="material-icons md-24">delete</i>
            </a>

            <!--Delete position modal-->
            <div tabindex="-1" class="modal fade" id="complete-dialog" style="display: none;" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Delete profile</h4>
                        </div>
                        <div class="pmd-modal-action pmd-modal-bordered text-right">
                            <button data-dismiss="modal" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" type="button">Cancel</button>
                            <button data-dismiss="modal" type="button" onclick="@("window.location.href='" + @Url.Action("Delete", "Positions", new { id = Model.PositionId }) + "'");" class="btn pmd-btn-flat pmd-ripple-effect btn-default">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--Delete position modal-->
        </div>
    </div>

    <div id="position-log-container">
        @* Partial of Logs *@
        <a href="#" class="container-close pmd-tooltip" data-toggle="tooltip" data-placement="left" title="Pagination Log">
            <i class="material-icons">format_list_bulleted</i>
        </a>
        @Html.Action("List", "Positions", new { id = Model.PositionId })
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h2>Candidates</h2>

        <!--pagination-->
        <table class="table" id="candidates-list">
            <thead>
                <tr>
                    <th>Email</th>
                    <th>Created On</th>
                    <th>Created By</th>
                    <th>Status</th>
                    <th rowspan="2">Options</th>
                    @if (ViewBag.userRole != "Admin")
                    {
                        <th>
                            @if (Model.Status == Talento.Entities.PositionStatus.Open)
                            {
                                <a style="margin-top: -15px;" class="btn btn-sm pmd-btn-fab pmd-btn-raised pmd-ripple-effect btn-primary" href="#" data-toggle="modal" alt="Add profile" id="buttonaddprofile" data-target="#new-complete-dialog">
                                    <i class="material-icons md-24">add</i>
                                </a>
                            }
                        </th>
                    }
                </tr>
            </thead>
            @foreach (var cP in ViewBag.onePageOfCandidatePositions)
            {
                <tr class="candidate-row" data-candidate-id="@cP.CandidateId"> 
                    <td>
                        @cP.Email
                    </td>
                    <td>
                        @cP.CreatedOn
                    </td>
                    <td>
                        @cP.CreatedBy.Email
                    </td>
                    <td>
                        @Html.Action("Status", "Candidate", new { positionModel = Model, candidateId = cP.CandidateId })
                    </td>
                    <td>
                        <a href="@Url.Action("Edit", "Candidate",new { id = cP.CandidateId, positionId = Model.PositionId } )" class="material-icons md-24 edit-candidate" data-target="#edit-position-dialog" alt="Edit candidate">
                            mode_edit
                        </a>
                    </td>                 
                    <td>
                        <a href="#" class="delete-candidate" data-target="#delete-position-dialog" data-candidate="@cP.CandidateId" alt="Delete candidate">
                            <i class="material-icons md-24">delete</i>
                        </a>
                    </td>
                </tr>
            }
        </table>
        <script>

            window.onload = function ()
            {
                (function ($) {
                    // Delte Candidate
                    var $delete = $(".delete-candidate");
                    var $buttonDelete = $("#delete-candidate-button");
                    var url = $buttonDelete.attr("data-url");
                    var dataCandidate = "";
                    var positionId = "@Model.PositionId";
                    $buttonDelete.on("click", function (event) {
                        event.preventDefault();
                        $.ajax({
                            url: url,
                            data: { idPosition: positionId, idCandidate: dataCandidate }
                        }).done(function (response) {
                            location.reload();
                        }).fail(function () {
                            location.reload();
                        });
                    });
                    $delete.on("click", function (event) {
                        event.preventDefault();
                        var $self = $(this);
                        var $modalTarget = $("#delete-position-dialog");
                        dataCandidate = $self.attr("data-candidate");
                        $modalTarget.modal('show');
                    });
                    // start
                    var $parent = $('#candidates-list');
                    console.log("first trigger");
                    $parent.on("click", '.edit-candidate', function (event) {
                        var status = "@Html.Raw(Model.Status.ToString()).ToString()";
                        // data-toggle="modal" data-target="#edit-position-dialog"
                        if (status == "Closed" || status == "Cancelled") {
                            event.preventDefault();
                            alert("The information you are looking for is not available");
                        }
                        else {
                            event.preventDefault();
                            console.log("candidate trigger");
                            var $this = $(this);
                            var $target = $($this.attr('data-target'));
                            $target.modal('show');
                            var $url = $this.attr('href');
                            $target.html('');
                            $.ajax({
                                url: $url
                            }).fail(function (err) {
                                var html = '<div class="modal-dialog"> \
                                < div class="modal-content" > \
                                    <div class="modal-body" id="edit-position-dialog-body"> Error:'+ err + '</div></div></div>';
                                $target.html(html);
                            }).done(function (result) {
                    console.log("Load trigger");
                                $target.html(result);
                                $target.modal()
                            });
                        }
                    });

                    $(document).ready(function () {
                        $(".btn-modal").on("click", function () {
                            $("#Position_Id").val(($(this).attr("name")).split("-")[1]);
                            $("#formnewprofile")[0].reset();
                            $(".field-validation-error").hide();
                    });
                        $(".modal").on('shown', function () {
                        clearForm();
                    });

                        $("#buttonaddprofile").click(function () {
                            clearForm();
                        });

                        $("#buttonnewprofile").click(function (evt) {
                            toastr.options = {
                                "debug": false,
                                "positionClass": "toast-top-center",
                                "onclick": null,
                                "fadeIn": 500,
                                "fadeOut": 2000,
                                "timeOut": 6000,
                                "extendedTimeOut": 2000
                            }
                            var emailCandidate = $("#Email").val();
                            var positionId = $("#Position_Id").val();
                            $.ajax({
                                type: "POST",
                                url: '/Candidate/ValidEmail',
                                dataType: 'json',
                                data: {
                                    emailCandidate: emailCandidate,
                                    positionId: positionId
                                },
                                success: function (response) {
                                    evt.preventDefault();
                                    var $form = $('#formnewprofile');
                                    if ($form.valid()) {
                                        $form.submit();
                                        $("#new-complete-dialog").modal("hide");
                                        setTimeout(function () { toastr.success("Profile has been added."); }, 2500)
                                    } else {
                                        return;
                                    }
                                },
                                error: function (error) {
                                    toastr.error("A profile with the specified email address cannot be registered.")
                                }
                            });
                    });
                        $("#Files").on("change", function () {
                        addFile();
                    });
                        $("#fileListDiv").on("click", ".delete-file", function () {
                        deleteFile($(this).attr('data-file'));
                    });
                });

                }(jQuery));

                function clearForm() {
                    document.getElementById("formnewprofile").reset();
                }

                function addFile() {
                    var formData = new FormData();
                    formData.append('image', $('input[type=file]')[0].files[0]);
                    var token = $('input[name="__RequestVerificationToken"]').val();
                    var headers = {};
                    headers['__RequestVerificationToken'] = token;
                    $.ajax({
                        type: "POST",
                        url: '/File/Add',
                        headers: headers,
                        data: formData,
                        dataType: 'json',
                        contentType: false,
                        processData: false,
                        success: function (response) {

                        },
                        error: function (error) {
                            //Error is good enough because the result is always empty
                            updatelist();
                        }

                    });
                }
                function deleteFile(filename) {
                    var formData = new FormData();
                    $.ajax({
                        type: "POST",
                        url: '/File/Delete',
                        data: "filename=" + filename,
                        success: function (response) {
                            updatelist();
                        },
                        error: function (error) {
                            updatelist();
                        }

                    });
                }

                function buildFileList(filelist) {

                    $("#fileListDiv").empty();
                    for (i = 0; i < filelist.length; i++) {
                        $("#fileListDiv").append("<p id='file_" + filelist[i] + "'>" +
                            "<i class='material-icons'>insert_drive_file</i>" +
                            "<span>" + filelist[i].FileName + "</span>" +
                            "<i class='delete-file material-icons' style='cursor:pointer' data-file='" + filelist[i].FileName + "'>delete</i>" +
                            "</p>");
                    }
                }

                $('#new-complete-dialog').on('hidden.bs.modal', function () {
                    $("body").removeClass("modal-open");
                    $.ajax({
                        type: "POST",
                        url: '/File/EmptyList',
                        dataType: 'json',
                        success: function (response) {
                            buildFileList(response);
                        },
                        error: function (error) {
                        }
                    });
                    clearFormValidation($("#new-complete-dialog").find("form"));
                    buildFileList();
                    setTimeout(stopUpdate, 2000);
                });

                function updatelist() {
                    $.ajax({
                        type: "POST",
                        url: '/File/ListCurrentFiles',
                        dataType: 'json',
                        success: function (response) {
                            buildFileList(response);
                        },
                        error: function (error) {
                        }
                    });
                }

                // Clear Form from Validations -.-
                function clearFormValidation(form) {
                    form.find("[data-valmsg-summary=true]")
                        .removeClass("validation-summary-errors")
                        .addClass("validation-summary-valid")
                        .find("ul").empty();
                    form.find("[data-valmsg-replace]")
                        .removeClass("field-validation-error")
                        .addClass("field-validation-valid")
                        .empty();
                }

                // Candidate Status Update
                var $selectCandidateStatus = $(".select-candidate-status");
                var $updateCandidateStatus = $(".update-status-candidate");

                $updateCandidateStatus.on("click", function (e) {
                    e.preventDefault();
                    var $self = $(this);

                    var $status = $self.parent(".form-group").find(".select-candidate-status");
                    var candidateId = $self.closest(".candidate-row").attr("data-candidate-id");

                    console.log($status);
                    console.log($status.val());

                    if ($status.val() !== null) {
                        $.post({
                            url: "/Candidate/Status",
                            data: { positionCandidateId: candidateId, status: $status.val() }
                        }).done(function (response) {
                            location.reload();
                        }).fail(function (error) {
                            alertify.set('notifier', 'position', 'bottom-left');
                            alertify.error("<strong style='color:#FFF;'>Invalid Action<i style='margin-top:10px; margin-left:10px;' class='material-icons'>warning</i></strong>");
                        });
                    }

                });
            }

        </script>
        <!--pagination-->
        <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
        @Html.PagedListPager((IPagedList)ViewBag.onePageOfCandidatePositions, page => Url.Action("Details", "Positions", new { Model.PositionId, page }))

        <!--Delete profile modal-->
        <div tabindex="-1" class="modal fade" id="delete-position-dialog" style="display: none;" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-body">
                        <p>Are you sure?</p>
                    </div>
                    <div class="pmd-modal-action pmd-modal-bordered text-right">
                        <button data-dismiss="modal" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" type="button">Cancel</button>
                        <button id="delete-candidate-button" data-candidate="" data-position="@Model.PositionId" data-url="@Url.Action("DeleteCandidate", "Positions")" data-dismiss="modal" type="button" class="btn pmd-btn-flat pmd-ripple-effect btn-default">Delete</button>
                    </div>
                </div>
            </div>
        </div>
        <!--Delete profile modal-->
        <!--Edit profile modal-->
        <div tabindex="-1" class="modal fade" id="edit-position-dialog" aria-hidden="true"></div>
        <!--Add profile modal-->
        <div tabindex="-1" class="modal fade" id="new-complete-dialog" style="display: none;" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form id="formnewprofile" action="/Candidate/CreateDetails/" method="post">
                        <div class="modal-body">
                            <h4>Attaching a new Profile to @Model.Title</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                <input data-val="true" data-val-number="The field Id must be a number." data-val-required="The Id field is required." id="Position_Id" name="Position_Id" type="hidden" value="@Model.PositionId" />
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="Name">Name </label>
                                    <div class="col-md-10">
                                        <input class="form-control text-box single-line" data-val="true" data-val-required="Name is required" id="Name" name="Name" type="text" />
                                        <span class="field-validation-valid text-danger" data-valmsg-for="Name" data-valmsg-replace="true" maxlength="50"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="Email">Email </label>
                                    <div class="col-md-10">
                                        <input class="form-control text-box single-line" data-val="true" data-val-required="Email is required" id="Email" name="Email" type="email"
                                               data-val-maxlength="The field Email Address must be a string or array type with a maximum length of '50'." data-val-maxlength-max="50" />
                                        <span class="field-validation-valid text-danger" data-valmsg-for="Email" data-valmsg-replace="true" maxlength="50"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="IsTcsEmployee">Is Tcs Employee? </label>
                                    <div class="col-md-10">
                                        <input class="form-control text-box single-line" data-val="true" id="IsTcsEmployee" name="IsTcsEmployee" type="checkbox" />
                                        <span class="field-validation-valid text-danger" data-valmsg-for="IsTcsEmployee" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="Competencies">Competencies </label>
                                    <div class="col-md-10">
                                        <input class="form-control text-box single-line" data-val="true" data-val-maxlength="The field Competencies must be a string" data-val-required="Competencies is required" id="Competencies" name="Competencies" type="text" />
                                        <span class="field-validation-valid text-danger" data-valmsg-for="Competencies" data-valmsg-replace="true" maxlength="300"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="Description">Description </label>
                                    <div class="col-md-10">
                                        <input class="form-control text-box single-line" data-val="true" data-val-maxlength="The field Description must be a string" data-val-required="Description is required" id="Description" name="Description" type="text" />
                                        <span class="field-validation-valid text-danger" data-valmsg-for="Description" data-valmsg-replace="true" maxlength="300"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2" for="LocalFiles">Local Files </label>
                                    <div class="col-md-10">

                                        @Html.Action("Index", "File", null)

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="pmd-modal-action pmd-modal-bordered text-right">
                            <button data-dismiss="modal" class="btn pmd-btn-flat pmd-ripple-effect btn-primary" type="button">Cancel</button>
                            <input id="buttonnewprofile" type="button" class="btn pmd-btn-flat pmd-ripple-effect btn-default" value="Confirm" />
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>